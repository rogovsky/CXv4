
# 1:id 2:label 3:units 4:dpyfmt.precision 5:r_base
define(`SYN_LINE', `
    knob $1_s $2 text - $3 %8.$4`'f               r:$5.dly.set
    knob $1_d "" onoff "offcol=green color=black" r:$5.mask
')

grouping main RFSYN_grouping "RFSyn, Injection/Extraction" lrtb "vertical" \
        content:9 {

    container starts   "Starts"       grid "nocoltitles" \
            base:ic.syn ncols:3 nattl:1 content:eval(1 + 3*2) {

        knob alloff   "Disable"  onoff "offcol=green color=black" r:all.mask

        knob subbun_s "SubBunch" text - "ms" %8.3f                r:subbun.dly.set
        noop
        knob subbun_d ""         onoff "offcol=green color=black" r:subbun.mask

        knob bprobe_s "B.Probe"  text - "ms" %8.3f                r:BProbe.dly.set
        selector - "" selector "align=right"                      r:BProbe.repRate.set \
                items:"#T-0-\t1\t2\t3\t4\t5\t6\t7"
        knob bprobe_d ""         onoff "offcol=green color=black" r:BProbe.mask
    } layinfo:newline

    container linac_rf "Linac: RF"    grid "nocoltitles" \
            base:ic.syn ncols:2 nattl:1 content:eval(1 + 2*17) {

        selector - "" selector "align=right" r:linRF.repRate.set \
                items:"#T-0-\t50Hz\t25Hz\t16.6Hz\t12.5Hz\t10Hz\t8.3Hz\t7.14Hz"
#                items:"#T-0-\t50Hz\t25Hz\t12.5Hz\t10Hz\t5Hz\t2.5Hz\t2Hz"

        SYN_LINE(, "Linac RF",       ms,  3, linRF)
        SYN_LINE(, " -Mod. delay",   mks, 3, mods)
        SYN_LINE(, "  --Mod 1",      mks, 3, mod1)
        SYN_LINE(, "  --Mod 2",      mks, 3, mod2)
        SYN_LINE(, "  --Mod 3",      mks, 3, mod3)
        SYN_LINE(, "  --Mod 4",      mks, 3, mod4)
        SYN_LINE(, " -RF delay",     mks, 3, RF)
        SYN_LINE(, "  --Kls 3 RF",   ns,  2, kl3RF)
        SYN_LINE(, "  --Kls 3 PT",   ns,  2, kl3Ph180)
        SYN_LINE(, "  --Kls 2 RF",   ns,  2, kl2RF)
        SYN_LINE(, "  --Kls 2 PT",   ns,  2, kl2Ph180)
        SYN_LINE(, "  --Kls 1 RF",   ns,  2, kl1RF)
        SYN_LINE(, "  --Kls 1 PT",   ns,  2, kl1Ph180)
        SYN_LINE(, "  --Kls 4 RF",   ns,  2, kl4RF)
        SYN_LINE(, "  --Kls 4 PT",   ns,  2, kl4Ph180)
        SYN_LINE(, " -RF ADC",     mks, 3, RF_ADC)
        SYN_LINE(, " -Synchr.3",   mks, 3, syn3)
    } layinfo:newline

    container linac    "Linac: beam"  grid "nocoltitles" \
            base:ic.syn ncols:2 nattl:1 content:eval(1 + 2*17) {

        #T-0-\t50Hz\t25Hz\t12.5Hz\t10Hz\t5Hz\t1Hz
        selector - "" selector "align=right" r:linBeam.repRate.set \
                items:"#T-0-\t/1\t/2\t/3\t/4\t/5\t/6\t/7"
#                items:"#T-0-\t50Hz\t25Hz\t12.5Hz\t10Hz\t5Hz\t2Hz\t1Hz"

        SYN_LINE(, "Linac",            ms,  3, linBeam)
        SYN_LINE(, " -Inj-Ext e-",     mks, 3, inject)
        SYN_LINE(, " -Inj-Ext e+",     mks, 3, bps700)
        SYN_LINE(, " -Beam delay",     mks, 3, beam)
        SYN_LINE(, "  --Gun&Diag",     mks, 3, gun_diag)
        SYN_LINE(, "   ---Gun HV",     ns,  2, gunHV)
        SYN_LINE(, "   ---Gun grid" ,  ns,  2, gunGrid)
        SYN_LINE(, "   ---ADC200",     ns,  2, ADC200)
        SYN_LINE(, "   ---Synchr.2",   ns,  2, syn2)
        SYN_LINE(, "   ---BPM",        ns,  2, linBPM)
        SYN_LINE(, "   ---IPP",        ns,  2, linIPP)
        SYN_LINE(, "   ---Phase 2856", ns,  2, PhMeas)
        SYN_LINE(, "   ---Pickup 2",   ns,  2, ringBPM)
        SYN_LINE(, "  --Rsrv.6-2",     mks, 3, reserve6_2)
        SYN_LINE(, "  --ADC conc.",    mks, 3, FC_ADC)
        SYN_LINE(, "  --Magn.conc.",   mks, 3, FC)
        SYN_LINE(, " -Synchr.1",       mks, 3, syn1)
    } layinfo:newline

    container xfr      "Transfer"     grid "nocoltitles" \
            base:"ic.syn.xfer" nattl:1 ncols:2 content:eval(1 + 2*12) {

        selector dest "->" selector r:.ic.extractor.clockSrc \
                items:"#Toff\tVEPP-2000\tVEPP-3\tTest\t\n???"

        SYN_LINE(, "Extraction",   ms,  3, extract)
        SYN_LINE(, "BEP",          ms,  3, BEP)
        SYN_LINE(, "VEPP3",        ms,  3, VEPP3)
        SYN_LINE(, "reserved",     ms,  3, tests)
        SYN_LINE(, "Kickers",      mks, 3, extr.kickers)
        SYN_LINE(, "K500 m.start", mks, 3, extr.K500MagStart)
        SYN_LINE(, "K500 m.stop",  mks, 3, extr.K500MagStop)
        SYN_LINE(, "K500 IPP",     mks, 3, extr.K500IPP)
        SYN_LINE(, "hbz 1",        mks, 3, test1)
        SYN_LINE(, "hbz 2",        mks, 3, test2)
        SYN_LINE(, "hbz 3",        mks, 3, test3)
        SYN_LINE(, "hbz 4",        mks, 3, test4)
    } layinfo:newline

    container injextr_e "I/E: e-"     grid "nocoltitles" \
            base:ic.eKickers nattl:3 ncols:2 content:eval(3 + 2*8) {

        knob starts ""  choicebs items:"#TExt\tLcl\b\blit=yellow" r:StartSrc.set \
                w:"_all_code;
                   qryval; putchan StartSrc.set; 
                   qryval; cmp_if_gt 0; ret; push 1; putchan repRate.set;
                   ret;"
        knob kstart "/" text  "withlabel" "" %3.0f       r:repRate.set
        knob alloff ""  onoff "offcol=green color=black" r:all.mask

        SYN_LINE(, "Run!",     mks, 3, run)
        SYN_LINE(, "HV start", mks, 3, chargeStart)
        SYN_LINE(, "HV stop",  mks, 3, chargeStop)
        SYN_LINE(, "ADC200",   mks, 3, ADC)
        SYN_LINE(, "PreK +",   ns,  2, preKickP)
        SYN_LINE(, "PreK -",   ns,  2, preKickN)
        SYN_LINE(, "Kick +",   ns,  2, kickP)
        SYN_LINE(, "Kick -",   ns,  2, kickN)
    } layinfo:newline
    container injextr_e_accords "" grid "nodecor" \
            base:ic.eKickers ncols:3 content:3 {
        knob accord1 "A1" text "withlabel,withunits,noincdec" "V" \
                %5.3f alwdrange:0-4.3 r:preKickU.set
        knob accord2 "A2" text "withlabel,withunits,noincdec" "V" \
                %5.3f alwdrange:0-4.3 r:KickU.set
        container ":" "~~" subwin "resizable,compact,noclsbtn" \
                        tip:"Accords 1 & 2 ADC200" \
                subwintitle:"Accords 1 & 2 ADC200" \
                content:1 {
            pzframe adc "" adc200 "" .ie_adc200_10
        }
    } layinfo:offset=0
    selector ie_mode "" selector r:ic.kickers.mode.set \
            items:"#Te-\te+\t\n?" \
            layinfo:offset=0

    container injextr_p "I/E: e+"     grid "nocoltitles" \
            base:ic.pKickers nattl:3 ncols:2 content:eval(3 + 2*8) {

        knob starts ""  choicebs items:"#TExt\tLcl\b\blit=yellow" r:StartSrc.set \
                w:"_all_code;
                   qryval; putchan StartSrc.set; 
                   qryval; cmp_if_gt 0; ret; push 1; putchan repRate.set;
                   ret;"
        knob kstart "/" text  "withlabel" "" %3.0f       r:repRate.set
        knob alloff ""  onoff "offcol=green color=black" r:all.mask

        SYN_LINE(, "Run!",     mks, 3, run)
        SYN_LINE(, "HV start", mks, 3, chargeStart)
        SYN_LINE(, "HV stop",  mks, 3, chargeStop)
        SYN_LINE(, "ADC200",   mks, 3, ADC)
        SYN_LINE(, "PreK +",   ns,  2, preKickP)
        SYN_LINE(, "PreK -",   ns,  2, preKickN)
        SYN_LINE(, "Kick +",   ns,  2, kickP)
        SYN_LINE(, "Kick -",   ns,  2, kickN)
    }
    container injextr_p_accords "" grid "nodecor" \
            base:ic.pKickers ncols:3 content:3 {
        knob accord3 "A3" text "withlabel,withunits,noincdec" "V" \
                %5.3f alwdrange:0-4.3 r:preKickU.set
        knob accord4 "A4" text "withlabel,withunits,noincdec" "V" \
                %5.3f alwdrange:0-4.3 r:KickU.set
        container ":" "~~" subwin "resizable,compact,noclsbtn" \
                        tip:"Accords 3 & 4 ADC200" \
                subwintitle:"Accords 3 & 4 ADC200" \
                content:1 {
            pzframe adc "" adc200 "" .ie_adc200_12
        }
    } layinfo:offset=0


}

sysname   rfsyn
defserver canhw:19
wintitle  main "RFSyn, Injection/Extraction"
winname   main rfsyn
winclass  main RFSyn
winopts   main ""

#ifndef __ADC4X250_DEFS_H
#define __ADC4X250_DEFS_H


enum { ADC4X250_ADDRESS_MODIFIER = 0x09 };

/* Map of registers */
enum
{
    /* General-purpose registers */
    ADC4X250_R_DEVICE_ID          = 0x000000,
    ADC4X250_R_VERSION            = 0x000004,
    ADC4X250_R_UNIQ_ID            = 0x000008,
    ADC4X250_R_INT_ENA            = 0x000010,
    ADC4X250_R_INT_STATUS         = 0x000014,
    ADC4X250_R_INT_VECTOR         = 0x000018,
    ADC4X250_R_INT_LINE           = 0x00001c,
    ADC4X250_R_BASEADDR           = 0x000020,
    ADC4X250_R_ADDRSPACE          = 0x000024,
    ADC4X250_R_CAPABILITIES       = 0x000028,

    /* Specific registers */
    ADC4X250_R_STATUS             = 0x000100,
    ADC4X250_R_CTRL               = 0x000104,
    ADC4X250_R_TIMER              = 0x000108,
    ADC4X250_R_ADC_TRIG_MODE      = 0x000110,
    ADC4X250_R_ADC_TRIG_SOURCE    = 0x000114,
    ADC4X250_R_ADC_RECORDER_ADDR  = 0x000118,
    ADC4X250_R_ADC_TRIG_LEVEL     = 0x00011c,
    ADC4X250_R_TEST_CTRL          = 0x000120,
    ADC4X250_R_TEST_STATUS        = 0x000124,
    ADC4X250_R_PLL_UPDATE         = 0x000128,
    ADC4X250_R_CLK_SRC            = 0x00012c,
    ADC4X250_R_PLL1_CTRL          = 0x000130,
    ADC4X250_R_PLL2_CTRL          = 0x000134,
    ADC4X250_R_PGA_RANGE_CHx_base = 0x000138,
      ADC4X250_R_PGA_RANGE_CHx_incr = 4,

    /* Debug registers */
    ADC4X250_R_CALIB_CONST_DYN_CHx_base  = 0x000200,
      ADC4X250_R_CALIB_CONST_DYN_CHx_incr  = 4,
    ADC4X250_R_CALIB_CONST_ZERO_CHx_base = 0x000210,
      ADC4X250_R_CALIB_CONST_ZERO_CHx_incr = 4,
    ADC4X250_R_CALIB_CONST_GAIN_CHx_base = 0x000220,
      ADC4X250_R_CALIB_CONST_GAIN_CHx_incr = 4,

    /* Data areas */
    ADC4X250_DATA_ADDR_CHx_base   = 0x400000,
      ADC4X250_DATA_ADDR_CHx_incr = 0x200000,
};

/* ADC4X250_R_INT_ENA */
enum
{
    ADC4X250_INT_ENA_ALL_shift             = 0,  ADC4X250_INT_ENA_ALL             = 1 << ADC4X250_INT_ENA_ALL_shift,
    ADC4X250_INT_ENA_ADC_CMPLT_shift       = 1,  ADC4X250_INT_ENA_ADC_CMPLT       = 1 << ADC4X250_INT_ENA_ADC_CMPLT_shift,
    ADC4X250_INT_ENA_CALIB_CMPLT_shift     = 2,  ADC4X250_INT_ENA_CALIB_CMPLT     = 1 << ADC4X250_INT_ENA_CALIB_CMPLT_shift,
    ADC4X250_INT_ENA_PGA_OVERRNG_shift     = 3,  ADC4X250_INT_ENA_PGA_OVERRNG     = 1 << ADC4X250_INT_ENA_PGA_OVERRNG_shift,
    ADC4X250_INT_ENA_CALIB_FAILED_shift    = 4,  ADC4X250_INT_ENA_CALIB_FAILED    = 1 << ADC4X250_INT_ENA_CALIB_FAILED_shift,
};
/* ADC4X250_R_INT_STATUS */
enum
{
    ADC4X250_INT_STATUS_SOFT_IRQ_shift     = 0,  ADC4X250_INT_STATUS_SOFT_IRQ     = 1 << ADC4X250_INT_STATUS_SOFT_IRQ_shift,
    ADC4X250_INT_STATUS_ADC_CMPLT_shift    = 1,  ADC4X250_INT_STATUS_ADC_CMPLT    = 1 << ADC4X250_INT_STATUS_ADC_CMPLT_shift,
    ADC4X250_INT_STATUS_CALIB_CMPLT_shift  = 2,  ADC4X250_INT_STATUS_CALIB_CMPLT  = 1 << ADC4X250_INT_STATUS_CALIB_CMPLT_shift,
    ADC4X250_INT_STATUS_PGA_OVERRNG_shift  = 3,  ADC4X250_INT_STATUS_PGA_OVERRNG  = 1 << ADC4X250_INT_STATUS_PGA_OVERRNG_shift,
    ADC4X250_INT_STATUS_CALIB_FAILED_shift = 4,  ADC4X250_INT_STATUS_CALIB_FAILED = 1 << ADC4X250_INT_STATUS_CALIB_FAILED_shift,
};

/* ADC4X250_R_STATUS */
enum
{
    ADC4X250_STATUS_RUN_IDLE_shift      = 0, ADC4X250_STATUS_RUN_IDLE      = 1 << ADC4X250_STATUS_RUN_IDLE_shift,
    ADC4X250_STATUS_WAIT_FOR_TRIG_shift = 1, ADC4X250_STATUS_WAIT_FOR_TRIG = 1 << ADC4X250_STATUS_WAIT_FOR_TRIG_shift,
    /* Bit 2 is unused */
    ADC4X250_STATUS_CALIB_shift         = 3, ADC4X250_STATUS_CALIB         = 1 << ADC4X250_STATUS_CALIB_shift,
    ADC4X250_STATUS_ADC_CMPLT_shift     = 4, ADC4X250_STATUS_ADC_CMPLT     = 1 << ADC4X250_STATUS_ADC_CMPLT_shift,
    ADC4X250_STATUS_PLL_LOCKED_shift    = 5, ADC4X250_STATUS_PLL_LOCKED    = 1 << ADC4X250_STATUS_PLL_LOCKED_shift,

    ADC4X250_STATUS_TRIG_ORDER_shift    = 6,
     ADC4X250_STATUS_TRIG_ORDER_bits    = 0xF,
     ADC4X250_STATUS_TRIG_ORDER_mask    = ADC4X250_STATUS_TRIG_ORDER_bits   << ADC4X250_STATUS_TRIG_ORDER_shift,

    ADC4X250_STATUS_PGA_OVERRNG_shift   = 10,
     ADC4X250_STATUS_PGA_OVERRNG_bits   = 0xF,
     ADC4X250_STATUS_PGA_OVERRNG_mask   = ADC4X250_STATUS_PGA_OVERRNG_bits  << ADC4X250_STATUS_PGA_OVERRNG_shift,

    ADC4X250_STATUS_CALIB_FAILED_shift  = 14,
     ADC4X250_STATUS_CALIB_FAILED_bits  = 0xF,
     ADC4X250_STATUS_CALIB_FAILED_mask  = ADC4X250_STATUS_CALIB_FAILED_bits << ADC4X250_STATUS_CALIB_FAILED_shift,
};
enum
{
    ADC4X250_TRIG_ORDER_VAL_4CH_CH0 = 0x9,
    ADC4X250_TRIG_ORDER_VAL_4CH_CH1 = 0x5,
    ADC4X250_TRIG_ORDER_VAL_4CH_CH2 = 0x6,
    ADC4X250_TRIG_ORDER_VAL_4CH_CH3 = 0xA,

    ADC4X250_TRIG_ORDER_VAL_2CH_CH0 = 0x5,
    ADC4X250_TRIG_ORDER_VAL_2CH_CH1 = 0xA,
};

/* ADC4X250_R_CTRL */
enum
{
    ADC4X250_CTRL_START_shift         = 0,  ADC4X250_CTRL_START         = 1 << ADC4X250_CTRL_START_shift,
    ADC4X250_CTRL_ADC_BREAK_ACK_shift = 1,  ADC4X250_CTRL_ADC_BREAK_ACK = 1 << ADC4X250_CTRL_ADC_BREAK_ACK_shift,
    ADC4X250_CTRL_CALIB_shift         = 2,  ADC4X250_CTRL_CALIB         = 1 << ADC4X250_CTRL_CALIB_shift,
    ADC4X250_CTRL_VME_SOFT_IRQ_shift  = 3,  ADC4X250_CTRL_VME_SOFT_IRQ  = 1 << ADC4X250_CTRL_VME_SOFT_IRQ_shift,
};

/* ADC4X250_R_TIMER */
enum
{
    ADC4X250_TIMER_PRETRIG = 18,

    ADC4X250_TIMER_1CH_MAX =  783173,
    ADC4X250_TIMER_2CH_MAX = 1566346,
    ADC4X250_TIMER_4CH_MAX = 3132692,
};

/* ADC4X250_R_ADC_TRIG_MODE -- not implemented (as of 06.07.2017) */
enum
{
    ADC4X250_ADC_TRIG_MODE_TRIG_MODE_shift      = 0,
     ADC4X250_ADC_TRIG_MODE_TRIG_MODE_bits      = 0x7,
     ADC4X250_ADC_TRIG_MODE_TRIG_MODE_mask      = ADC4X250_ADC_TRIG_MODE_TRIG_MODE_bits      << ADC4X250_ADC_TRIG_MODE_TRIG_MODE_shift,

    ADC4X250_ADC_TRIG_MODE_TRIG_MULTI_NUM_shift = 3,
     ADC4X250_ADC_TRIG_MODE_TRIG_MULTI_NUM_bits = 0x3FF, // =1023
     ADC4X250_ADC_TRIG_MODE_TRIG_MULTI_NUM_mask = ADC4X250_ADC_TRIG_MODE_TRIG_MULTI_NUM_bits << ADC4X250_ADC_TRIG_MODE_TRIG_MULTI_NUM_shift,
};
enum
{
    ADC4X250_TRIG_MODE_VAL_SINGLE   = 0,
    ADC4X250_TRIG_MODE_VAL_MULTI    = 1,
    ADC4X250_TRIG_MODE_VAL_RECORDER = 2,
};

/* ADC4X250_R_ADC_TRIG_SOURCE */
enum
{
    ADC4X250_ADC_TRIG_SOURCE_TRIG_ENA_shift  = 0,
     ADC4X250_ADC_TRIG_SOURCE_TRIG_ENA_bits  = 0x7,
     ADC4X250_ADC_TRIG_SOURCE_TRIG_ENA_mask  = ADC4X250_ADC_TRIG_SOURCE_TRIG_ENA_bits  << ADC4X250_ADC_TRIG_SOURCE_TRIG_ENA_shift,

    ADC4X250_ADC_TRIG_SOURCE_TTL_INPUT_shift = 3,
     ADC4X250_ADC_TRIG_SOURCE_TTL_INPUT_bits = 0x7,
     ADC4X250_ADC_TRIG_SOURCE_TTL_INPUT_mask = ADC4X250_ADC_TRIG_SOURCE_TTL_INPUT_bits << ADC4X250_ADC_TRIG_SOURCE_TTL_INPUT_shift,
};
enum
{
    ADC4X250_TRIG_ENA_VAL_DISABLE = 0,
    ADC4X250_TRIG_ENA_VAL_INT     = 1,
    ADC4X250_TRIG_ENA_VAL_EXT     = 2,
    ADC4X250_TRIG_ENA_VAL_BP      = 3,
    ADC4X250_TRIG_ENA_VAL_BP_SYNC = 4,
};

/* ADC4X250_R_PLL_UPDATE */
enum
{
    ADC4X250_PLL_UPDATE_PLL_CTRL_UPDATE_shift = 0,  ADC4X250_PLL_UPDATE_PLL_CTRL_UPDATE_mask = 1 << ADC4X250_PLL_UPDATE_PLL_CTRL_UPDATE_shift,
};

/* ADC4X250_R_CLK_SRC */
enum
{
    ADC4X250_CLK_SRC_shift = 0,
     ADC4X250_CLK_SRC_bits = 0x3,
     ADC4X250_CLK_SRC_mask = ADC4X250_CLK_SRC_bits << ADC4X250_CLK_SRC_shift,
};
enum
{
    ADC4X250_CLK_SRC_VAL_INT = 0,
    ADC4X250_CLK_SRC_VAL_FP  = 1,
    ADC4X250_CLK_SRC_VAL_BP  = 2,
};

/* ADC4X250_R_PGA_RANGE_CHx_base */
enum
{
    ADC4X250_PGA_RANGE_shift = 0,
     ADC4X250_PGA_RANGE_bits = 3,
     ADC4X250_PGA_RANGE_mask = ADC4X250_PGA_RANGE_bits << ADC4X250_PGA_RANGE_shift,
};
enum
{
    ADC4X250_RANGE_VAL_0_5V = 0,
    ADC4X250_RANGE_VAL_1V   = 1,
    ADC4X250_RANGE_VAL_2V   = 2,
    ADC4X250_RANGE_VAL_4V   = 3,
};


#endif /* __ADC4X250_DEFS_H */
